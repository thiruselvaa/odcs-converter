[tool:pytest]
minversion = 6.0
addopts =
    -ra
    -q
    --strict-markers
    --strict-config
    --tb=short
    --maxfail=10
    --durations=10
    --cov=src/odcs_converter
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-fail-under=80
    --junitxml=junit/test-results.xml

testpaths =
    tests

python_files =
    test_*.py
    *_test.py

python_classes =
    Test*

python_functions =
    test_*

norecursedirs =
    .git
    .tox
    dist
    build
    south_migrations
    .venv
    venv
    .pytest_cache
    __pycache__
    node_modules
    .ropeproject
    .ruff_cache

markers =
    unit: marks tests as unit tests (fast, isolated, no external dependencies)
    integration: marks tests as integration tests (medium speed, component interaction)
    e2e: marks tests as end-to-end tests (slower, full workflow testing)
    slow: marks tests as slow running (may take several seconds or more)
    cli: marks tests that test CLI functionality
    performance: marks tests that measure performance characteristics
    network: marks tests that require network access
    database: marks tests that require database access
    excel: marks tests specific to Excel file operations
    yaml: marks tests specific to YAML operations
    json: marks tests specific to JSON operations
    conversion: marks tests that test data conversion operations
    validation: marks tests that test data validation
    regression: marks tests that prevent regression of known issues
    smoke: marks tests as smoke tests (basic functionality verification)
    acceptance: marks tests as acceptance tests (user story verification)

filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = tests/logs/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d %(funcName)s(): %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

timeout = 300

collect_ignore =
    setup.py
    conftest.py
    build
    dist

console_output_style = progress
